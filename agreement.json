{
  "openapi": "3.0.0",
  "info": {
    "title": "Party Agreements And Details API",
    "description": "# Description\n\nProvides information to the party-agreements-and-details resources.\n\nThe Party Agreements And Details API confluence page can be found [here](https://tools.publicis.sapient.com/confluence/pages/viewpage.action?pageId=875298911&src=contextnavpagetreemode).",
    "version": "1.0"
  },
  "security": [
    {
      "JWT": []
    }
  ],
  "paths": {
    "/{partyId}/": {
      "get": {
        "tags": [
          "PartyAgreementDetails"
        ],
        "summary": "Get the agreements and details for the specified party.",
        "description": "Will retrieve a full list of agreements and details for the specified party.",
        "operationId": "GetPartyAgreementsAndDetails",
        "parameters": [
          {
            "name": "partyId",
            "in": "path",
            "description": "A unique identifier used to identify an party (customer/business).  The input takes in a 10 character string consisting of numerics only.  Where required, the string is padded with leading zeros.\n\nThe format is restricted used the expression ^\\d{10}$\n",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 10,
              "maxLength": 10,
              "pattern": "^\\d{10}$"
            }
          },
          {
            "in": "query",
            "name": "includeClosedAgreements",
            "required": false,
            "description": "An optional query string parameter which if set to True will return closed agreements details in the response. If not set or False then closed agreements will be filtered out",
            "schema": {
              "type": "string",
              "default": false
            }
          },
          {
            "in": "header",
            "name": "X-Channel",
            "required": true,
            "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include\nPOST OFFICE\nINTERNET\nMOBILE\n\n\nThe format is restricted using the expression ^[ a-zA-Z0-9,_''\\.\\-]{0,25}$\n",
            "schema": {
              "type": "string",
              "minLength": 0,
              "maxLength": 25,
              "pattern": "^[ a-zA-Z0-9,_'\\.\\-]{0,25}$"
            }
          },
          {
            "in": "header",
            "name": "X-Journey-Id",
            "required": true,
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n\nThe format is restricted using the expression ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            }
          },
          {
            "in": "header",
            "name": "X-Source-System-Id",
            "required": true,
            "description": "Please refer TMS domain 'BusinessSystemID' for the  list of possible values. Sample Values include\n\n\nBASE24\nCIS\n\nThe format is restricted using the expression ^[ a-zA-Z0-9,_''\\.\\-]{0,60}$\n",
            "schema": {
              "type": "string",
              "minLength": 0,
              "maxLength": 60,
              "pattern": "^[ a-zA-Z0-9,_''\\.\\-]{0,60}$"
            }
          },
          {
            "in": "header",
            "name": "X-Create-Date-Time",
            "required": true,
            "description": "Time stamp associated with creation of the request message, utilisting the UTC ISO 8601 Date Time format. For example 2017-01-01T00:00:00.001Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "header",
            "name": "X-IP-Address",
            "required": false,
            "description": "The IPv4/IPv6 address of the caller. The format is restricted using the expression ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$",
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 39,
              "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$"
            }
          },
          {
            "in": "header",
            "name": "X-Functional-Unit-Id",
            "required": false,
            "description": "The function unit identifier for the consuming service\nThe TMS branch unit identifier, i.e. 0183 for the Internet Bank\n\nThe format is restricted using the expression ^\\d{0,5}$\n",
            "schema": {
              "type": "string",
              "minLength": 0,
              "maxLength": 5,
              "pattern": "^\\d{0,5}$"
            }
          },
          {
            "in": "header",
            "name": "X-Business-Unit-Id",
            "required": true,
            "description": "Typically this relates to the Branch Id of the consumer,\nbut can be specific values for non-branch related calls \n(this would be used for the FunctionalUnitID in the NEM/SAP world).\nFor example, Conventry would be “0531”\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-Channel-Type-Code",
            "required": true,
            "description": "Typically the channel type for the consumer. For example “210“ used by Internet Bank and “216“ used by Mobile Banking\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-Machine-Id",
            "required": true,
            "description": "Typically the machine identifier of the consumer. For example 9.12.234.234\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-User-Id",
            "required": true,
            "description": "Typically the identifier of the user (the customer number or employee number or other) of the consumer.\nFor example “1234567890“ - 10 digit customer number \n(other values can be used to represent the system instead of an ID, for example “SELF”)\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The agreement information has been successfully retrieved",
            "headers": {
              "X-Journey-Id": {
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000",
                "schema": {
                  "type": "string",
                  "minLength": 36,
                  "maxLength": 36,
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                }
              },
              "X-Create-Date-Time": {
                "description": "Time stamp associated with creation of the request message. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Agreements and details GET response",
                  "type": "object",
                  "required": [
                    "agreements"
                  ],
                  "properties": {
                    "agreements": {
                      "title": "Party Agreements and Details",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetPartyAgreementsDetailsResponse"
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/MetaDataDetails"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "X-Journey-Id": {
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000",
                "schema": {
                  "type": "string",
                  "minLength": 36,
                  "maxLength": 36,
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                }
              },
              "X-Create-Date-Time": {
                "description": "Time stamp associated with creation of the request message. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00.001Z",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Bad Request",
            "headers": {
              "X-Journey-Id": {
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000",
                "schema": {
                  "type": "string",
                  "minLength": 36,
                  "maxLength": 36,
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                }
              },
              "X-Create-Date-Time": {
                "description": "Time stamp associated with creation of the request message. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00.001Z",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "X-Journey-Id": {
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000",
                "schema": {
                  "type": "string",
                  "minLength": 36,
                  "maxLength": 36,
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                }
              },
              "X-Create-Date-Time": {
                "description": "Time stamp associated with creation of the request message. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00.001Z",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Journey-Id": {
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000",
                "schema": {
                  "type": "string",
                  "minLength": 36,
                  "maxLength": 36,
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                }
              },
              "X-Create-Date-Time": {
                "description": "Time stamp associated with creation of the request message. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00.001Z",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "X-Journey-Id": {
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000",
                "schema": {
                  "type": "string",
                  "minLength": 36,
                  "maxLength": 36,
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                }
              },
              "X-Create-Date-Time": {
                "description": "Time stamp associated with creation of the request message. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00.001Z",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "headers": {
              "X-Journey-Id": {
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000",
                "schema": {
                  "type": "string",
                  "minLength": 36,
                  "maxLength": 36,
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                }
              },
              "X-Create-Date-Time": {
                "description": "Time stamp associated with creation of the request message. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00.001Z",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "/party-agreements-and-details/v1"
    }
  ],
  "components": {
    "parameters": {
      "IncludeClosedAgreements": {
        "in": "query",
        "name": "includeClosedAgreements",
        "required": false,
        "description": "An optional query string parameter which if set to True will return closed agreements details in the response. If not set or False then closed agreements will be filtered out",
        "schema": {
          "type": "string",
          "default": false
        }
      },
      "Additional-Info": {
        "in": "header",
        "name": "X-Additional-Info",
        "required": false,
        "description": "This object holds information in addition to the other header fields below. The strings should be populated in a name/value pair format as follows; [\"ProcessID 123456789\", \"ParentProcessID 66213\"].\n\nThe values of each individual and value should each have a max length of 60, and adhere to \"^[a-zA-Z0-9,_'\\.\\-]*$\"\n",
        "style": "simple",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "minLength": 0,
            "maxLength": 121
          }
        }
      },
      "Channel": {
        "in": "header",
        "name": "X-Channel",
        "required": true,
        "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include\nPOST OFFICE\nINTERNET\nMOBILE\n\n\nThe format is restricted using the expression ^[ a-zA-Z0-9,_''\\.\\-]{0,25}$\n",
        "schema": {
          "type": "string",
          "minLength": 0,
          "maxLength": 25,
          "pattern": "^[ a-zA-Z0-9,_'\\.\\-]{0,25}$"
        }
      },
      "Journey-Id": {
        "in": "header",
        "name": "X-Journey-Id",
        "required": true,
        "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n\nThe format is restricted using the expression ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
        "schema": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        }
      },
      "Source-System-Id": {
        "in": "header",
        "name": "X-Source-System-Id",
        "required": true,
        "description": "Please refer TMS domain 'BusinessSystemID' for the  list of possible values. Sample Values include\n\n\nBASE24\nCIS\n\nThe format is restricted using the expression ^[ a-zA-Z0-9,_''\\.\\-]{0,60}$\n",
        "schema": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60,
          "pattern": "^[ a-zA-Z0-9,_''\\.\\-]{0,60}$"
        }
      },
      "Create-Date-Time": {
        "in": "header",
        "name": "X-Create-Date-Time",
        "required": true,
        "description": "Time stamp associated with creation of the request message, utilisting the UTC ISO 8601 Date Time format. For example 2017-01-01T00:00:00.001Z",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "IP-Address": {
        "in": "header",
        "name": "X-IP-Address",
        "required": false,
        "description": "The IPv4/IPv6 address of the caller. The format is restricted using the expression ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$",
        "schema": {
          "type": "string",
          "minLength": 7,
          "maxLength": 39,
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$"
        }
      },
      "partyId": {
        "name": "partyId",
        "in": "path",
        "description": "A unique identifier used to identify an party (customer/business).  The input takes in a 10 character string consisting of numerics only.  Where required, the string is padded with leading zeros.\n\nThe format is restricted used the expression ^\\d{10}$\n",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^\\d{10}$"
        }
      },
      "summary": {
        "name": "summary",
        "in": "query",
        "description": "A query string flag to indicate is only a summary response is required.\n\nIf omitted, the default value for this query item is false.\n",
        "schema": {
          "type": "boolean"
        }
      },
      "FunctionalUnitId": {
        "in": "header",
        "name": "X-Functional-Unit-Id",
        "required": false,
        "description": "The function unit identifier for the consuming service\nThe TMS branch unit identifier, i.e. 0183 for the Internet Bank\n\nThe format is restricted using the expression ^\\d{0,5}$\n",
        "schema": {
          "type": "string",
          "minLength": 0,
          "maxLength": 5,
          "pattern": "^\\d{0,5}$"
        }
      },
      "BusinessUnitID": {
        "in": "header",
        "name": "X-Business-Unit-Id",
        "required": true,
        "description": "Typically this relates to the Branch Id of the consumer,\nbut can be specific values for non-branch related calls \n(this would be used for the FunctionalUnitID in the NEM/SAP world).\nFor example, Conventry would be “0531”\n",
        "schema": {
          "type": "string"
        }
      },
      "SetDistributionChannelTypeCode": {
        "in": "header",
        "name": "X-Channel-Type-Code",
        "required": true,
        "description": "Typically the channel type for the consumer. For example “210“ used by Internet Bank and “216“ used by Mobile Banking\n",
        "schema": {
          "type": "string"
        }
      },
      "MachineID": {
        "in": "header",
        "name": "X-Machine-Id",
        "required": true,
        "description": "Typically the machine identifier of the consumer. For example 9.12.234.234\n",
        "schema": {
          "type": "string"
        }
      },
      "UserID": {
        "in": "header",
        "name": "X-User-Id",
        "required": true,
        "description": "Typically the identifier of the user (the customer number or employee number or other) of the consumer.\nFor example “1234567890“ - 10 digit customer number \n(other values can be used to represent the system instead of an ID, for example “SELF”)\n",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "headers": {
          "X-Journey-Id": {
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            }
          },
          "X-Create-Date-Time": {
            "description": "Time stamp associated with creation of the request message. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00.001Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden"
      },
      "405": {
        "description": "Method Not Allowed"
      },
      "406": {
        "description": "Not Acceptable"
      },
      "429": {
        "description": "Too Many Requests"
      },
      "ResponsesHeaders": {
        "description": "The response header parameters are common across all NEM resources.",
        "headers": {
          "X-Journey-Id": {
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            }
          },
          "X-Create-Date-Time": {
            "description": "Time stamp associated with creation of the request message. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00.001Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "description": "A JSON Web Token, will be used to send security information by the consumer of API.JWTs will be validated or Created by DataPower.The API is agnostic to the underlying implementation of security.",
        "name": "Authorization",
        "type": "apiKey",
        "in": "header"
      }
    },
    "schemas": {
      "BalanceTimeStamped": {
        "description": "A monetary amount including the Currency Type with the date it was calculated. [Optional] Only set for Current Accounts.",
        "type": "object",
        "properties": {
          "effectiveDateTime": {
            "description": "Time stamp associated with when the balance was updated. The UTC ISO 8601 Date Time format. 2017-01-01T00:00:00.001Z",
            "type": "string",
            "format": "date-time"
          },
          "balance": {
            "$ref": "#/components/schemas/CurrencyAmount"
          }
        },
        "required": [
          "effectiveDateTime",
          "balance"
        ]
      },
      "CurrencyAmount": {
        "description": "A monetary amount including the Currency Type. [Optional] Only set for Current Accounts.",
        "type": "object",
        "properties": {
          "amount": {
            "description": "Identifies the monetary amount.",
            "type": "string",
            "pattern": "^\\d{1,22}(\\.\\d{1,6})?$"
          },
          "currency": {
            "description": "Identifies the actual denomination of a Currency Amount, such as Pounds Sterling. A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 'Codes for the representation of currencies and funds",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
          },
          "creditDebitIndicator": {
            "description": "Indicates whether the amount is a credit or a debit. If the amount is unsigned or preceded by a \"+\" then set as CREDIT, if a \"-\" then set as DEBIT.",
            "type": "string",
            "enum": [
              "CREDIT",
              "DEBIT"
            ]
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "A custom error code returned by the API for the consumer interested in fine-grained error handling. In the case where HTTP response code is too generic to provide specific treatment by the consumer, custom code can be used to handle specific error condition based on the provider services error condition. For example UI might want to show list of field error by name. Each interface specification specifies which errors this API can return."
          },
          "message": {
            "type": "string",
            "maxLength": 2048,
            "description": "It provides information application-specific errors returned by provider service or description of class of error returned by the API for example validation error."
          },
          "logErrorId": {
            "type": "string",
            "format": "uuid",
            "description": "An unique reference for every error being logged."
          }
        },
        "example": {
          "code": "SL.404.1001",
          "message": "No matching records.",
          "logErrorId": "6c992d02-5743-11e8-8c2a-ac1c94570000"
        }
      },
      "Errors": {
        "type": "object",
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "This block wraps either field level error or the error returned by the provider service and returned as a custom error. In case of multiple service invocation failure, all error will be wrapped and return for consumer to make decision and compose more meaningful message as desired.",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "default": []
          }
        },
        "example": {
          "code": "SL.400.3000",
          "message": "General Schema Validation Failure - Client.",
          "logErrorId": "6c992d02-5743-11e8-8c2a-ac1c94570000"
        }
      },
      "GetPartyAgreementsDetailsResponse": {
        "title": "AgreementDetailsResponse",
        "description": "The agreement details response block.  Contains the agreements associated with the given party.",
        "type": "object",
        "properties": {
          "agreement": {
            "$ref": "#/components/schemas/Agreement"
          }
        }
      },
      "MetaDataDetails": {
        "title": "Metadata",
        "description": "Metadata for the response.",
        "type": "object",
        "properties": {
          "allRecordsSuccess": {
            "description": "Top level status code that is set to true if all accounts have lookupStatus = SUCCESS, otherwise false",
            "type": "boolean",
            "example": true
          },
          "accountDetailsFetched": {
            "description": "If SOR doesn't returns data for any of the agreements then client should know that there is no account details and its value should be false.",
            "type": "boolean",
            "example": true
          },
          "basSource": {
            "description": "The source for the Banking And Savings Account info (either Cache or Alternate) [Optional] Only set if Current Account details returned",
            "type": "string",
            "example": "Cache"
          },
          "basCacheLastUpdatedDateTime": {
            "description": "The date time for when the Banking And Savings cache was last updated. This represents the last time any account was updated in the cache. [Optional] Only set if Current Account details returned from cache.",
            "type": "string",
            "format": "date-time",
            "example": "2021-01-13T09:13:55.345Z"
          }
        }
      },
      "Agreement": {
        "title": "Agreement",
        "description": "The agreement object",
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/AgreementMetadata"
          },
          "agreementReferenceNumber": {
            "description": "The unique generated identification number for an agreement.",
            "type": "string",
            "minLength": 1,
            "maxLength": 10
          },
          "internalAgreementReferenceNumber": {
            "description": "The current internal reference number for a specific Party's Agreement.",
            "type": "string",
            "minLength": 1,
            "maxLength": 10
          },
          "agreementBranchPrefix": {
            "description": "",
            "type": "string",
            "minimum": 1,
            "maxLength": 4
          },
          "externalAgreementReferenceNumber": {
            "description": "The external agreement number which the customer will refer to the agreement as.  Often holds the SCAN.",
            "type": "string",
            "minLength": 1
          },
          "productType": {
            "description": "The product identifier.",
            "type": "string",
            "minLength": 1,
            "maximum": 8
          },
          "agreementLocationCode": {
            "description": "Agreement host location - Coded representation of the ledger system on which the agreement is hosted.  For full list of values see TMS view 257 (Agreement Element Location).",
            "type": "integer",
            "minLength": 1,
            "maxLength": 4
          },
          "agreementStatusCode": {
            "description": "Indicates the status of the agreement, e.g. 1 - Open, D - Open (other)",
            "type": "string",
            "minLength": 1,
            "maxLength": 1
          },
          "agreementOpenedDate": {
            "description": "The datetime that the Agreement was originally allocated a status of 'Open'. The UTC ISO 8601 Date format YYYY-MM-DD",
            "type": "string",
            "format": "date"
          },
          "agreementClosedDate": {
            "description": "The datetime that the Agreement was allocated allocated a status of 'Closed'. The UTC ISO 8601 Date format YYYY-MM-DD",
            "type": "string",
            "format": "date"
          },
          "productSubTypeCode": {
            "description": "Reference data that describes a product sub type (from SAP).",
            "type": "integer"
          },
          "currentBalanceAmount": {
            "$ref": "#/components/schemas/BalanceTimeStamped"
          },
          "availableBalanceAmount": {
            "$ref": "#/components/schemas/BalanceTimeStamped"
          },
          "overdraftType": {
            "description": "Indicates whether the overdraft is a Reducing or Standard overdraft. Possible values are Reducing and Standard. [Optional] Only set for Current Accounts with an overdraft set.",
            "type": "string"
          },
          "overdraftLimitAmount": {
            "$ref": "#/components/schemas/CurrencyAmount"
          },
          "authorisedOverdraftLimitAmount": {
            "$ref": "#/components/schemas/CurrencyAmount"
          },
          "absoluteOverdraftLimitAmount": {
            "$ref": "#/components/schemas/CurrencyAmount"
          },
          "controlledIndicator": {
            "description": "Indicates whether the account is under the control of Customer Collection as a result of breaking terms of payment agreement.\n[Optional] Only set for Current Accounts.",
            "type": "boolean"
          },
          "accountNoTraceIndicator": {
            "description": "Flag to indicate whether NBS has failed to contact the customer at phone numbers or addresses associated with the account.\n[Optional] Only set for Current Accounts.",
            "type": "boolean"
          },
          "withdrawlsAllowedIndicator": {
            "description": "An indicator to determine is withdrawals are permitted.\n[Optional] Only set for Current Accounts.",
            "type": "boolean"
          },
          "fraudulentUseIndicator": {
            "description": "Flag to indicate whether the account is suspected of being used fraudulently.\n[Optional] Only set for Current Accounts.",
            "type": "boolean"
          },
          "suspectOpenIndicator": {
            "description": "Flag to indicate whether account is suspected of being opened suspiciously.\n[Optional] Only set for Current Accounts.",
            "type": "boolean"
          },
          "unauthorisedOverdraftIndicator": {
            "description": "Indicates whether the account has gone overdrawn without authorisation.\n[Optional] Only set for Current Accounts.",
            "type": "boolean"
          },
          "eloanActiveIndicator": {
            "description": "Indicates whether an e-Loan has been activated for this account.",
            "type": "boolean"
          },
          "pendingSwitchOutIndicator": {
            "description": "The account is in the process of being switched out via account switcher.\n[Optional] Only set for Current Accounts.",
            "type": "boolean"
          },
          "switchedOutIndicator": {
            "description": "Flag to indicate whether the account has been switched out via account switcher.\n[Optional] Only set for Current Accounts.",
            "type": "boolean"
          },
          "signatureCode": {
            "description": "Code indicating required signatures to approve transactions on a joint account.  Possible values 0 = Senior account holder, 1 = All signatures, 2 = Either signature, 3 = Any two signatures, G = Details in remarks area (no longer in use), H = Details in the passbook.\n[Optional] Only set for Current Accounts.",
            "type": "string",
            "minLength": 1,
            "maxLength": 1
          },
          "creditScore": {
            "description": "This field returns the 5 character credit score for the customer as held on the CIF (Cheque Information File).  Each of the 5 characters has its own possible values and meanings.  These are : Character 1:A = CGC CARD / CHEQUE BOOK / ATM CARD,B = CHEQUE BOOK / ATM CARD,C = ATM CARD Only,D = PAYMENT CARD / CHEQUE BOOK,Character 2:, 1 = Pass score, 2 = Pass score, 3 = Staff score, 4 = Pass score, 5 = Fail score, 6 = Fail score,Character 3:P = Passed Reference,F = Failed Reference,Character 4:A = MT pass,B = MTD override, C = Branch override,D = Marketing override,E = No Guarantee Card,Character 5:,G = usual, S = Student Scorecard,T = Staff Scorecard ,U = Under 35 Scorecard,V = Over 35 Scorecard, O = Old Scorecard.\n[Optional] Only set for Current Accounts.",
            "type": "string",
            "maxLength": 5
          },
          "investorTypeCode": {
            "description": "The investor code for the customer.\n[Optional] Only set for Current Accounts.",
            "type": "string",
            "maxLength": 1
          },
          "iban": {
            "description": "The International Bank Account Number (IBAN) for the account.\n[Optional] Only set for Current Accounts.",
            "type": "string",
            "maxLength": 22
          },
          "accountAccessRestrictionReasonCode": {
            "description": "The account access restriction reason code.\n[Optional] Only set for Current Accounts.",
            "type": "string",
            "maxLength": 1
          },
          "productVersion": {
            "description": "Account version Id",
            "type": "integer",
            "maxLength": 10
          },
          "allowedWithdrawalsInPrefPeriod": {
            "description": "The maximum number of customer initiated withdrawals allowed in the preferential period",
            "type": "integer",
            "maxLength": 10
          },
          "customerWithdrawalsInPrefPeriod": {
            "description": "The number of customer initiated withdrawals during the preferential period",
            "type": "integer",
            "maxLength": 10
          }
        },
        "example": [
          {
            "agreementReferenceNumber": "0113315771",
            "internalAgreementReferenceNumber": "0630902938",
            "agreementBranchPrefix": "0574",
            "externalAgreementReferenceNumber": "07-94-36 30902938",
            "productType": "00007001",
            "agreementLocationCode": 1,
            "agreementStatusCode": 5
          },
          {
            "agreementReferenceNumber": "0053846063",
            "internalAgreementReferenceNumber": null,
            "agreementBranchPrefix": null,
            "externalAgreementReferenceNumber": "** Credit Card PAN or Token **",
            "productType": "00009396",
            "agreementLocationCode": 59,
            "agreementStatusCode": 5
          }
        ]
      },
      "AgreementMetadata": {
        "description": "Metadata on the account response. Metadata can allow caller to react based on the information provided i..eif not want to use sentineled record or attribute",
        "type": "object",
        "properties": {
          "lookupStatus": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "PARTIAL_DATA",
              "INVALID",
              "NOT_FOUND"
            ],
            "description": "Status of lookup in the cache:\n * `SUCCESS` - Record found & all data valid,\n * `PARTIAL_DATA` - sentinels exist in the data, more details in sentinels array,\n * `INVALID` - Record status mismatch\n * `NOT_FOUND` - Record not found or minimum data missing\n"
          },
          "sentinels": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "fully qualified attribute/object name in the response for which sentinel is set\n",
              "example": "accountNumber, currentBalanceAmount.balance"
            }
          }
        },
        "required": [
          "lookupStatus",
          "sentinels"
        ]
      }
    }
  }
}